services:
  # --- STACK DE ANALÍTICA Y VISUALIZACIÓN ---
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    # Se copian las variables del compose original. 
    # Docker Compose usará los valores de 'env_example'.
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME:-user}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD:-password123}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG:-somorrostro}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_BUCKET:-metales-bucket}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN:-zLYr4_COsINfisi3-BSY4sp1LNMMqvMEPpK4iENAFNhsq-OlN6ahC-NGV08LGVq0VZjgUyLtUSL6ek3bHoC1Bw==}
    networks:
      - app-network

  grafana:
    image: grafana/grafana:10.3.0
    container_name: grafana_server
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      # Rutas actualizadas para que apunten desde la raíz
      - ./services/analytics-stack/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./services/analytics-stack/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=${INFLUX_TOKEN:-zLYr4_COsINfisi3-BSY4sp1LNMMqvMEPpK4iENAFNhsq-OlN6ahC-NGV08LGVq0VZjgUyLtUSL6ek3bHoC1Bw==}
      - INFLUX_ORG=${INFLUX_ORG:-somorrostro}
      - INFLUX_BUCKET=${INFLUX_BUCKET:-metales-bucket}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    networks:
      - app-network

  nodered:
    build:
      # La ruta del contexto de build ahora es relativa a la raíz
      context: ./services/analytics-stack/node_red
    container_name: node_red
    depends_on:
      - influxdb
    ports:
      - "1880:1880"
    volumes:
      - nodered_data:/data
    networks:
      - app-network

  # --- SERVICIO DE INGESTA DE DATOS ---
  jupyter-services:
    container_name: jupyter_services
    build:
      context: ./services/jupyter-services
    # Se asegura de que InfluxDB se inicie primero
    depends_on:
      - influxdb
    networks:
      - app-network

# --- VOLÚMENES Y REDES GLOBALES ---
volumes:
  influxdb_data:
  grafana_data:
  nodered_data:

# Red compartida para la comunicación entre servicios
networks:
  app-network:
    driver: bridge